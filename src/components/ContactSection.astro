---
const apiBaseUrl = import.meta.env.PUBLIC_API_BASE_URL;
---

<section id="contacto" class="bg-white py-20">
  <div class="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8">
    <div class="grid gap-12 md:grid-cols-2">
      <div>
        <h2 class="mb-6 text-4xl font-bold text-black">Contáctanos</h2>
        <form id="contact-form" class="space-y-6">
          <div>
            <label class="block text-sm font-medium text-accent-dark">Nombre</label>
            <input 
              type="text" 
              class="mt-1 w-full max-w-full rounded-lg border border-gray-300 p-3 focus:border-primary focus:outline-none focus:ring-2 focus:ring-primary/20"
            />
          </div>
          <div>
            <label class="block text-sm font-medium text-accent-dark">Correo</label>
            <input 
              type="email" 
              class="mt-1 w-full max-w-full rounded-lg border border-gray-300 p-3 focus:border-primary focus:outline-none focus:ring-2 focus:ring-primary/20"
            />
          </div>
          <div>
            <label class="block text-sm font-medium text-accent-dark">Celular</label>
            <input 
              type="number" 
              class="mt-1 w-full max-w-full rounded-lg border border-gray-300 p-3 focus:border-primary focus:outline-none focus:ring-2 focus:ring-primary/20"
            />
          </div>
          <div>
            <label class="block text-sm font-medium text-accent-dark">Mensaje</label>
            <textarea 
              class="mt-1 w-full max-w-full rounded-lg border border-gray-300 p-3 focus:border-primary focus:outline-none focus:ring-2 focus:ring-primary/20"
              rows="4"
            ></textarea>
          </div>
          <button 
            type="submit" 
            class="w-full max-w-full rounded-lg bg-primary py-3 text-white transition hover:bg-primary/90"
          >
            Enviar Mensaje
          </button>
        </form>
      </div>
      
      <div class="space-y-6">
        <div class="h-[400px] overflow-hidden rounded-lg">
          <!-- Replace with actual map embed -->
          <div class="h-full w-full max-w-full bg-gray-200">
            <iframe 
              src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d335.4343363369635!2d-67.11091144650658!3d-17.969257242385176!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x93e2b0bb92f976d3%3A0xbfaa7ce3bf9d58b1!2sUniversidad%20Privada%20de%20Oruro%20-%20UNIOR!5e0!3m2!1ses-419!2sbo!4v1731894711837!5m2!1ses-419!2sbo"
              width="600" 
              height="450" 
              style="border:0;" 
              allowfullscreen="" 
              loading="lazy" 
              referrerpolicy="no-referrer-when-downgrade"
              class="w-full max-w-full"
            ></iframe>
          </div>
        </div>
        
        <div id="toast" class="hidden fixed bottom-4 right-4 bg-green-500 text-white p-4 rounded-lg shadow-lg">
          <p>¡Tu consulta ha sido enviada correctamente!</p>
        </div>
        
        <div class="space-y-4">
          <div>
            <h3 class="text-lg font-semibold text-black">Dirección</h3>
            <p class="text-accent-light">C. Junín #348, Oruro, Bolivia</p>
          </div>
          <div>
            <h3 class="text-lg font-semibold text-black">Teléfono</h3>
            <p class="text-accent-light">+591 25273780</p>
          </div>
          <div>
            <h3 class="text-lg font-semibold text-black">Email</h3>
            <p class="text-accent-light">info@unior.edu.bo</p>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<script define:vars={{ apiBaseUrl }}>
  // Referenciar el formulario
  const form = document.getElementById("contact-form");

  // Verificar si el formulario existe
  if (form) {
    const toast = document.getElementById("toast");

    form.addEventListener("submit", async function (e) {
      e.preventDefault();

      // Validar los campos
      const isValid = validateForm(form);
      if (!isValid) return;

      const formData = new FormData(form);

      try {
        const response = await fetch(`${apiBaseUrl}/contacto`, {
          method: "POST",
          body: formData,
        });

        if (response.ok) {
          // Mostrar el toast
          toast.classList.remove("hidden");

          // Ocultar el toast después de 3 segundos
          setTimeout(() => {
            toast.classList.add("hidden");
          }, 3000);

          form.reset();
        } else {
          console.error("Hubo un problema al enviar tu consulta.");
        }
      } catch (error) {
        console.error("Error al enviar el formulario:", error);
      }
    });
  } else {
    console.error('No se encontró el formulario con el id "contact-form"');
  }

  // Función para validar el formulario
  function validateForm(form) {
    let isValid = true;
    const name = form.querySelector('input[type="text"]');
    const email = form.querySelector('input[type="email"]');
    const phone = form.querySelector('input[type="number"]');
    const message = form.querySelector('textarea');

    // Restablecer estilos de error
    resetValidationStyles([name, email, phone, message]);

    // Validar nombre
    if (name.value.trim() === "") {
      showError(name, "El nombre es obligatorio");
      isValid = false;
    }

    // Validar correo
    if (!validateEmail(email.value)) {
      showError(email, "Por favor, ingresa un correo válido");
      isValid = false;
    }

    // Validar celular
    if (!/^\d{8,15}$/.test(phone.value)) {
      showError(phone, "Por favor, ingresa un número de celular válido");
      isValid = false;
    }

    // Validar mensaje
    if (message.value.trim() === "") {
      showError(message, "El mensaje no puede estar vacío");
      isValid = false;
    }

    return isValid;
  }

  // Mostrar un mensaje de error en un campo
  function showError(input, message) {
    const errorDiv = document.createElement("div");
    errorDiv.className = "text-red-500 text-sm mt-1";
    errorDiv.textContent = message;
    input.classList.add("border-red-500");
    input.parentNode.appendChild(errorDiv);
  }

  // Restablecer estilos de validación
  function resetValidationStyles(inputs) {
    inputs.forEach((input) => {
      input.classList.remove("border-red-500");
      const errorDiv = input.parentNode.querySelector(".text-red-500");
      if (errorDiv) errorDiv.remove();
    });
  }

  // Validar formato de correo
  function validateEmail(email) {
    const re = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    return re.test(email);
  }
</script>
