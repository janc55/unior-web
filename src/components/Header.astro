---
const navItems = [
  { name: "Inicio", href: "/" },
  { name: "Sobre UNIOR", href: "/sobre-unior" },
  { name: "Admisiones", href: "/admisiones" },
  { name: "Carreras", href: "/#carreras" },
  { name: "Noticias y Eventos", href: "/#noticias-eventos" },
  { name: "Contacto", href: "/#contacto" },
];

import "@fontsource/bebas-neue";

const { isHero } = Astro.props;
---

<header class={`top-0 left-0 w-full z-20 transition-colors duration-300 ease-in-out 
  ${isHero ? 'absolute bg-transparent' : 'relative bg-white shadow-md'}`}>
  <div class="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8">
    <div class="flex h-16 items-center justify-between">
      <div class="flex-shrink-0">
        <a href="/" class="flex items-center">
          <span
            class={`ml-2 text-4xl font-regular hover:scale-105 font-bebas tracking-wider 
                    ${isHero ? 'text-white hover:text-primary' : 'text-red-600 hover:text-primary'}`}>
            UNIOR
          </span>
        </a>
      </div>
      <nav class="hidden lg:flex">
        <ul class="flex space-x-4">
          {
            navItems.map((item) => (
              <li>
                <a
                  href={item.href}
                  class={`rounded-md px-3 py-2 text-sm font-medium transition 
                          ${isHero ? 'text-white hover:bg-gray-200 hover:text-text-light' : 'text-black hover:bg-gray-200 hover:text-primary'}`}>
                  {item.name}
                </a>
              </li>
            ))
          }
        </ul>
      </nav>
      <div class="flex items-center">
        <a
          href="https://aulavirtualunior.com"
          class="rounded-md bg-primary-light px-4 py-2 text-sm font-medium text-white hover:bg-primary-light/90"
        >
          Plataforma Virtual
        </a>
        <button
          type="button"
          aria-label="Abrir menú"
          class={`ml-4 inline-flex items-center justify-center rounded-md p-2 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-primary lg:hidden ${isHero ? 'text-white hover:bg-gray-100 hover:text-gray-500' : 'text-neutral-700 hover:bg-neutral-100 hover:text-neutral-700'}`}
          
        >
          <span class="sr-only">Abrir menú</span>
          <svg
            class="h-6 w-6"
            fill="none"
            viewBox="0 0 24 24"
            stroke-width="1.5"
            stroke="currentColor"
            aria-hidden="true"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5"></path>
          </svg>
        </button>
      </div>
    </div>
  </div>

  <!-- Mobile menu, hidden by default -->
  <div class="md:hidden hidden bg-white" id="mobile-menu">
    <div class="space-y-1 px-2 pb-3 pt-2">
      {
        navItems.map((item) => (
          <a
            href={item.href}
            class="block rounded-md px-3 py-2 text-base font-medium text-accent-dark hover:bg-accent-lightner hover:text-text-dark"
          >
            {item.name}
          </a>
        ))
      }
    </div>
  </div>
</header>

<script>
  const header = document.querySelector("header");

  // Cambia el color de fondo del header al hacer scroll
  window.addEventListener("scroll", () => {
    if (window.scrollY > 50) {
      header.classList.add("bg-white", "shadow-md");
    } else {
      header.classList.add("bg-transparent");
      header.classList.remove("bg-white", "shadow-md");
    }
  });

  // Seleccionar el botón hamburguesa correctamente
  const mobileMenuButton = document.querySelector(
    'button[aria-label="Abrir menú"]',
  );
  const mobileMenu = document.getElementById("mobile-menu");

  mobileMenuButton.addEventListener("click", () => {
    // Alternar la clase hidden para mostrar/ocultar el menú
    mobileMenu.classList.toggle("hidden");
  });
</script>
