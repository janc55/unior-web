---
interface Props {
  webmSrc: string;
  mp4Src: string;
  posterSrc: string;
}

const { webmSrc, mp4Src, posterSrc } = Astro.props;
---

<div class="relative w-full aspect-video">
  <video
    class="w-full h-full rounded-lg shadow-2xl object-cover"
    poster={posterSrc}
    preload="metadata"
    muted
    loop
    playsinline
  >
    <source src={webmSrc} type="video/webm">
    <source src={mp4Src} type="video/mp4">
    Tu navegador no soporta el elemento de video.
  </video>
  <div class="absolute inset-0 flex items-center justify-center">
    <button
      class="bg-white bg-opacity-50 rounded-full p-4 hover:bg-opacity-75 transition-all duration-300 play-pause-btn"
      aria-label="Reproducir o pausar video"
    >
      <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8 text-purple-900" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z" />
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
      </svg>
    </button>
  </div>
</div>

<script>
  class OptimizedVideo extends HTMLElement {
    constructor() {
      super();
      const video = this.querySelector('video');
      const playPauseBtn = this.querySelector('.play-pause-btn');

      if (video && playPauseBtn) {
        playPauseBtn.addEventListener('click', () => {
          if (video.paused) {
            video.play();
          } else {
            video.pause();
          }
        });

        // Intersection Observer para reproducir/pausar el video cuando estÃ¡ en el viewport
        const observer = new IntersectionObserver((entries) => {
          entries.forEach(entry => {
            if (entry.isIntersecting) {
              video.play();
            } else {
              video.pause();
            }
          });
        }, { threshold: 0.5 });

        observer.observe(video);
      }
    }
  }

  customElements.define('optimized-video', OptimizedVideo);
</script>